*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]

# [INPUT]
# Accept all loopback input
-A INPUT -i lo -j ACCEPT
# Allow the three way handshake
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# Reject spoofed packets
-A INPUT -s 10.0.0.0/8 -j DROP
-A INPUT -s 169.254.0.0/16 -j DROP
-A INPUT -s 172.16.0.0/12 -j DROP
-A INPUT -s 127.0.0.0/8 -j DROP
-A INPUT -s 224.0.0.0/4 -j DROP
-A INPUT -d 224.0.0.0/4 -j DROP
-A INPUT -s 240.0.0.0/5 -j DROP
-A INPUT -d 240.0.0.0/5 -j DROP
-A INPUT -s 0.0.0.0/8 -j DROP
-A INPUT -d 0.0.0.0/8 -j DROP
-A INPUT -d 239.255.255.0/24 -j DROP
-A INPUT -d 255.255.255.255/32 -j DROP

# Stop smurf attacks
-A INPUT -p icmp -m icmp --icmp-type 17 -j DROP
-A INPUT -p icmp -m icmp --icmp-type 13 -j DROP
-A INPUT -p icmp -m icmp --icmp-type any -m limit --limit 1/sec -j ACCEPT

# Drop all invalid packets
-A INPUT -m state --state INVALID -j DROP
-A FORWARD -m state --state INVALID -j DROP
-A OUTPUT -m state --state INVALID -j DROP

# Drop excessive RST packets to avoid smurf attacks
-A INPUT -p tcp -m tcp --tcp-flags RST RST -m limit --limit 2/sec --limit-burst 2 -j ACCEPT

# Attempt to block portscans
-A INPUT -m recent --rcheck --seconds 86400 --name portscan --rsource -j DROP
-A FORWARD -m recent --rcheck --seconds 86400 --name portscan --rsource -j DROP

# Once the day has passed, remove them from the portscan list
-A INPUT -m recent --remove --name portscan --rsource
-A FORWARD -m recent --remove --name portscan --rsource

# These rules add scanners to the portscan list, and log the attempt.
-A INPUT -p tcp -m tcp --dport 139 -m recent --set --name portscan --rsource -j LOG --log-prefix "Portscan:"
-A INPUT -p tcp -m tcp --dport 139 -m recent --set --name portscan --rsource -j DROP
-A FORWARD -p tcp -m tcp --dport 139 -m recent --set --name portscan --rsource -j LOG --log-prefix "Portscan:"
-A FORWARD -p tcp -m tcp --dport 139 -m recent --set --name portscan --rsource -j DROP

# Allow the following ports through from outside
-A INPUT -p tcp -m tcp --dport 22    -j ACCEPT 
-A INPUT -p tcp -m tcp --dport 25    -j ACCEPT 
-A INPUT -p tcp -m tcp --dport 80    -j ACCEPT 
-A INPUT -p tcp -m tcp --dport 143   -j ACCEPT 
-A INPUT -p tcp -m tcp --dport 443   -j ACCEPT 
-A INPUT -p tcp -m tcp --dport 993   -j ACCEPT 

# Add Service
<% node['iptables']['filter']['INPUT'].each do |args| -%>
-A INPUT <%= args %>
<% end -%>

# Allow pings through
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT

-A INPUT -j REJECT --reject-with icmp-port-unreachable
-A FORWARD -j REJECT --reject-with icmp-port-unreachable

# Kill all other input
-A INPUT -j REJECT

# [OUTPUT]
-A OUTPUT -o lo -j ACCEPT
-A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# Allow the following ports through from outside
-A OUTPUT -p tcp -m tcp --dport 22 -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport 25 -j ACCEPT
-A OUTPUT -p udp -m udp --dport 43 -j ACCEPT
-A OUTPUT -p udp -m udp --dport 53 -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport 53 -j ACCEPT
-A OUTPUT -p udp -m udp --dport 67 -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A OUTPUT -p udp -m udp --dport 123 -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport 587 -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport 143 -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport 993 -j ACCEPT

# Add Service
<% node['iptables']['filter']['OUTPUT'].each do |args| -%>
-A OUTPUT <%= args %>
<% end -%>

# Allout pings out
-A OUTPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT

# Kill all other output
-A OUTPUT -j REJECT --reject-with icmp-port-unreachable

-A FORWARD -j REJECT

COMMIT
